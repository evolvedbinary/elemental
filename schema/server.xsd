<?xml version="1.0" encoding="UTF-8"?>
<!--

    Elemental
    Copyright (C) 2024, Evolved Binary Ltd

    admin@evolvedbinary.com
    https://www.evolvedbinary.com | https://www.elemental.xyz

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; version 2.1.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

    NOTE: Parts of this file contain code from 'The eXist-db Authors'.
          The original license header is included below.

    =====================================================================

    eXist-db Open Source Native XML Database
    Copyright (C) 2001 The eXist-db Authors

    info@exist-db.org
    http://www.exist-db.org

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

-->

<!--
    Schema for Elemental Server Configuration file server.xml
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1"
           version="1.0.0">
    <xs:simpleType name="yes_no">
        <xs:restriction base="xs:string">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:attributeGroup name="service">
        <xs:attribute name="enabled" type="yes_no" default="yes"/>
        <xs:attribute name="context" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    The context path of the service. Specify an url-pattern as for a servlet-mapping.
                    Example: /xmlrpc/* forwards all paths beginning with /xmlrpc to the xmlrpc service
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:element name="param">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string"/>
            <xs:attribute name="value" type="xs:string"/>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="service">
        <xs:sequence>
            <xs:element ref="param" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attributeGroup ref="service"/>
    </xs:complexType>
    <xs:element name="server">
        <xs:annotation>
            <xs:documentation>
                Configures the stand-alone server: the stand-alone server is a minimal
                webserver with just three services enabled by default:
                WebDAV, XML-RPC, REST
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="listener" minOccurs="1" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="param" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                        <xs:attribute name="protocol" type="xs:string"/>
                        <xs:attribute name="port" type="xs:integer"/>
                        <xs:attribute name="host" type="xs:string" use="optional"/>
                        <xs:attribute name="address" type="xs:string" use="optional"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="webdav" type="service"/>
                <xs:element name="xmlrpc" type="service"/>
                <xs:element name="rest" type="service"/>
                <xs:element name="servlet" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attributeGroup ref="service"/>
                        <xs:attribute name="class" type="xs:string"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="filter" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="param" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                        <xs:attribute name="enabled" type="yes_no" default="yes"/>
                        <xs:attribute name="path" type="xs:string"/>
                        <xs:attribute name="class" type="xs:string"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="forwarding">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="root" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>
                                        Define a forwarding for requests to the server root, i.e.
                                        if you access the server without specifying a path
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute name="destination" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>
                                                The destination path to which the request will be
                                                forwarded.
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="forward" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                                        Define URL forwardings
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute name="path" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>
                                                Requests to the given path will be forwarded
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="destination" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>
                                                The destination path to which the request will be
                                                forwarded
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>