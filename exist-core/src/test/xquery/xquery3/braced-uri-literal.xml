<?xml version="1.0" encoding="UTF-8"?>
<!--

    Elemental
    Copyright (C) 2024, Evolved Binary Ltd

    admin@evolvedbinary.com
    https://www.evolvedbinary.com | https://www.elemental.xyz

    Use of this software is governed by the Business Source License 1.1
    included in the LICENSE file and at www.mariadb.com/bsl11.

    Change Date: 2028-04-27

    On the date above, in accordance with the Business Source License, use
    of this software will be governed by the Apache License, Version 2.0.

    Additional Use Grant: Production use of the Licensed Work for a permitted
    purpose. A Permitted Purpose is any purpose other than a Competing Use.
    A Competing Use means making the Software available to others in a commercial
    product or service that: substitutes for the Software; substitutes for any
    other product or service we offer using the Software that exists as of the
    date we make the Software available; or offers the same or substantially
    similar functionality as the Software.

-->
<TestSet>
    <testName>braced uri literal</testName>
    <description>
        <p>Test xquery3 braced uri literals</p>
        <author>Adam Retter</author>
    </description>

    <test>
        <task>Test URIBracedLiteral in element name test</task>
        <code><![CDATA[
	xquery version "3.0";
    declare namespace s = "https://stuff";

    typeswitch(<s:create-collection/>)
        case element(Q{https://stuff}create-collection) return
            <create/>
        default return
            <default/>
]]>
        </code>
        <expected><create/></expected>
    </test>
    <test>
        <task>Test URIBracedLiteral as function name</task>
        <code><![CDATA[
	xquery version "3.0";
    declare namespace o = "https://other";

    declare function Q{https://other}hello() {
        <hello/>
    };

    o:hello()
]]>
        </code>
        <expected><hello/></expected>
    </test>
    <test output="text">
        <task>Test URIBracedLiteral as function call</task>
        <code><![CDATA[
	xquery version "3.0";
    declare namespace o = "https://other";

    declare function o:hello() {
        <hello/>
    };

    fn:count(Q{https://other}hello())
]]>
        </code>
        <expected>1</expected>
    </test>
</TestSet>
