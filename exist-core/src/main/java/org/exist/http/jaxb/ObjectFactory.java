//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.01 at 08:56:54 PM GMT 
//

/*
 * eXist-db Open Source Native XML Database
 * Copyright (C) 2001 The eXist-db Authors
 *
 * info@exist-db.org
 * http://www.exist-db.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package org.exist.http.jaxb;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.exist.http.jaxb package. 
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    /**
     * Create an instance of {@link Result }
     *
     * @return the result
     */
    public Result createResult() {
        return new Result();
    }

    /**
     * Create an instance of {@link Query }
     *
     * @return the query
     */
    public Query createQuery() {
        return new Query();
    }

    /**
     * Create an instance of {@link Sequence }
     *
     * @return the sequence
     */
    public Sequence createSequence() {
        return new Sequence();
    }

    /**
     * Create an instance of {@link Query.Properties }
     *
     * @return the query properties
     */
    public Query.Properties createQueryProperties() {
        return new Query.Properties();
    }

    /**
     * Create an instance of {@link Query.Variables }
     *
     * @return the query variables
     */
    public Query.Variables createQueryVariables() {
        return new Query.Variables();
    }

    /**
     * Create an instance of {@link Query.Variables.Variable }
     *
     * @return the variable
     */
    public Query.Variables.Variable createQueryVariablesVariable() {
        return new Query.Variables.Variable();
    }

    /**
     * Create an instance of {@link Collection }
     *
     * @return the collection
     */
    public Collection createCollection() {
        return new Collection();
    }

    /**
     * Create an instance of {@link Result.Value }
     *
     * @return the result value
     */
    public Result.Value createResultValue() {
        return new Result.Value();
    }

    /**
     * Create an instance of {@link Sequence.Value }
     *
     * @return the sequence value
     */
    public Sequence.Value createSequenceValue() {
        return new Sequence.Value();
    }

    /**
     * Create an instance of {@link Query.Properties.Property }
     *
     * @return the property
     */
    public Query.Properties.Property createQueryPropertiesProperty() {
        return new Query.Properties.Property();
    }

    /**
     * Create an instance of {@link Query.Variables.Variable.Qname }
     *
     * @return the qname
     */
    public Query.Variables.Variable.Qname createQueryVariablesVariableQname() {
        return new Query.Variables.Variable.Qname();
    }

}
